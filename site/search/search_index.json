{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"LyriX Docs","text":"<p>Resumo r\u00e1pido do reposit\u00f3rio e instru\u00e7\u00f5es principais.</p> <ul> <li>Vers\u00e3o: v0.1-pc1</li> <li>Data de entrega PC1: 29/09/2025</li> <li>Link do reposit\u00f3rio: https://github.com/TPPE-VictorGuimaraes/</li> </ul>"},{"location":"overview/","title":"Vis\u00e3o Geral","text":"<p>Breve descri\u00e7\u00e3o do projeto, objetivo e escopo dos ponto de controles.</p>"},{"location":"overview/#ponto-de-controle-1","title":"Ponto de Controle 1","text":""},{"location":"overview/#ponto-de-controle-2","title":"Ponto de Controle 2","text":""},{"location":"overview/#ponto-de-controle-3","title":"Ponto de Controle 3","text":""},{"location":"ambiente/ambiente-db-docker/","title":"Ambiente - Banco de Dados (Docker)","text":"<ul> <li><code>docker-compose.yml</code> usado: </li> <li>Comandos:</li> <li><code>docker-compose up -d</code></li> <li><code>docker-compose down</code></li> <li>Volume e persist\u00eancia</li> </ul>"},{"location":"ambiente/ambiente-db-ide/","title":"Ambiente - BD (IDE / Conex\u00e3o)","text":"<ul> <li>Configura\u00e7\u00f5es de conex\u00e3o</li> <li>Exemplo para IntelliJ / DataGrip / Android Studio</li> <li>SQL de cria\u00e7\u00e3o de tabela <code>songs</code> (exemplo)</li> </ul>"},{"location":"ambiente/ambiente-locker/","title":"Ambiente - Locker","text":"<ul> <li>O que \u00e9: onde guardar vari\u00e1veis sens\u00edveis (n\u00e3o versionar).</li> <li>Arquivo de exemplo: <code>.env.example</code></li> <li>Observa\u00e7\u00f5es de seguran\u00e7a.</li> </ul>"},{"location":"arquitetura/arquitetura/","title":"Arquitetura do Projeto","text":""},{"location":"arquitetura/arquitetura/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Na constru\u00e7\u00e3o de aplicativos m\u00f3veis, a arquitetura \u00e9 um dos fatores mais importantes para garantir que o sistema seja escal\u00e1vel, test\u00e1vel, de f\u00e1cil manuten\u00e7\u00e3o e evolutivo.  </p> <p>Existem diferentes abordagens utilizadas no desenvolvimento de apps Android e servidores backend, como:</p> <ul> <li>Arquitetura em camadas simples (MVC): onde a interface de usu\u00e1rio, l\u00f3gica de neg\u00f3cio e acesso a dados est\u00e3o mais acoplados. Apesar de f\u00e1cil de implementar, tende a gerar problemas de manuten\u00e7\u00e3o em projetos maiores.  </li> <li>MVP (Model\u2013View\u2013Presenter): separa a l\u00f3gica de apresenta\u00e7\u00e3o da UI, mas ainda pode gerar acoplamento em cen\u00e1rios complexos.  </li> <li>MVVM (Model\u2013View\u2013ViewModel): modelo amplamente utilizado em conjunto com as bibliotecas do Jetpack. Facilita a separa\u00e7\u00e3o entre a camada de interface (View) e a l\u00f3gica de apresenta\u00e7\u00e3o (ViewModel), permitindo uma melhor testabilidade.  </li> <li>Clean Architecture: proposta por Robert C. Martin (Uncle Bob), organiza o software em camadas conc\u00eantricas, onde as regras de neg\u00f3cio ficam isoladas das implementa\u00e7\u00f5es de frameworks. Essa abordagem garante independ\u00eancia, baixo acoplamento e alta manutenibilidade.  </li> </ul>"},{"location":"arquitetura/arquitetura/#arquitetura-escolhida","title":"Arquitetura Escolhida","text":"<p>Neste projeto, foi adotada uma combina\u00e7\u00e3o entre:  </p> <ul> <li>Clean Architecture + MVVM no aplicativo mobile, utilizando Jetpack Compose para a interface de usu\u00e1rio.  </li> <li>Ktor no backend, com documenta\u00e7\u00e3o de API via Swagger/OpenAPI, banco de dados PostgreSQL dockerizado e servi\u00e7os REST.  </li> </ul> <p>Essa escolha foi feita para garantir:  </p> <ul> <li>Separa\u00e7\u00e3o de responsabilidades clara entre UI, l\u00f3gica de neg\u00f3cio, dados e backend.  </li> <li>Testabilidade (use cases e ViewModels no app, e rotas no backend podem ser testadas isoladamente).  </li> <li>Escalabilidade, permitindo adicionar novas features sem comprometer o c\u00f3digo existente.  </li> <li>Ado\u00e7\u00e3o de tecnologias modernas do ecossistema Android e Kotlin (Compose, Hilt, Coroutines, Flow, Room, Retrofit, Ktor).  </li> </ul>"},{"location":"arquitetura/arquitetura/#estrutura-em-camadas-mobile","title":"Estrutura em Camadas (Mobile)","text":"<p>A arquitetura do aplicativo Android \u00e9 dividida em tr\u00eas camadas principais, alinhadas com Clean Architecture:</p>"},{"location":"arquitetura/arquitetura/#1-camada-de-apresentacao-presentation","title":"1. Camada de Apresenta\u00e7\u00e3o (Presentation)","text":"<ul> <li>Respons\u00e1vel pela interface gr\u00e1fica (UI).  </li> <li>Implementada com Jetpack Compose.  </li> <li>Usa o padr\u00e3o MVVM com <code>ViewModel</code> para gerenciar estado e l\u00f3gica de apresenta\u00e7\u00e3o.  </li> <li>Comunica\u00e7\u00e3o ass\u00edncrona com os casos de uso (UseCases) via Coroutines e Flow.  </li> </ul>"},{"location":"arquitetura/arquitetura/#2-camada-de-dominio-domain","title":"2. Camada de Dom\u00ednio (Domain)","text":"<ul> <li>Cont\u00e9m as regras de neg\u00f3cio e casos de uso (UseCases).  </li> <li>Define interfaces de reposit\u00f3rio para abstrair fontes de dados.  </li> <li>Independente de frameworks, garante que o dom\u00ednio n\u00e3o dependa de detalhes de implementa\u00e7\u00e3o.  </li> </ul>"},{"location":"arquitetura/arquitetura/#3-camada-de-dados-data","title":"3. Camada de Dados (Data)","text":"<ul> <li>Implementa os reposit\u00f3rios definidos no dom\u00ednio.  </li> <li>Cont\u00e9m:  </li> <li>Remote Data Source (ex.: Retrofit + API REST via Ktor).  </li> <li>Local Data Source (ex.: Room Database).  </li> <li>Faz a convers\u00e3o de modelos (DTOs \u2194 Entities \u2194 Domain Models).  </li> </ul>"},{"location":"arquitetura/arquitetura/#arquitetura-do-backend-ktor","title":"Arquitetura do Backend (Ktor)","text":"<p>O backend ser\u00e1 respons\u00e1vel por fornecer os dados de letras de m\u00fasicas, artistas, tradu\u00e7\u00f5es e funcionalidades extras ao app.  </p>"},{"location":"arquitetura/arquitetura/#estrutura","title":"Estrutura","text":"<p>Ktor Application    - Cont\u00e9m as rotas (endpoints REST).    - Configura\u00e7\u00f5es de autentica\u00e7\u00e3o, logging e serializa\u00e7\u00e3o.  </p> <p>Camada de Dom\u00ednio (UseCases/Services)    - Cont\u00e9m as regras de neg\u00f3cio do backend.    - Define contratos de reposit\u00f3rios.  </p> <p>Camada de Dados (Repositories)    - Integra\u00e7\u00e3o com banco de dados PostgreSQL (dockerizado).    - Uso de ORM/SQL DSL (Exposed, Hibernate ou equivalente).  </p> <p>Documenta\u00e7\u00e3o da API    - Feita com Swagger/OpenAPI, integrando com as rotas do Ktor.    - Disponibiliza uma UI interativa para explorar e testar os endpoints.  </p>"},{"location":"arquitetura/arquitetura/#fluxo-de-dados-visao-geral","title":"Fluxo de Dados (Vis\u00e3o Geral)","text":"<p>[UI/Compose] &lt;--&gt; [ViewModel] &lt;--&gt; [UseCases] &lt;--&gt; [Repository Interface]</p> <p>[Remote API (Ktor)] &lt;--&gt; [PostgreSQL Docker]</p> <p>| Swagger/OpenAPI (documenta\u00e7\u00e3o)</p> <ol> <li>A UI (Compose) dispara uma a\u00e7\u00e3o do usu\u00e1rio.</li> <li>O ViewModel interpreta o evento e chama um UseCase.</li> <li>O UseCase consulta o Reposit\u00f3rio (definido no dom\u00ednio).</li> <li>O Reposit\u00f3rio decide buscar no Remote (Ktor API) ou no Local (Room).</li> <li>No backend (Ktor), a requisi\u00e7\u00e3o chega na rota, que aciona os servi\u00e7os e consulta o PostgreSQL.</li> <li>O resultado percorre o caminho inverso at\u00e9 a UI, que exibe o estado atualizado.</li> </ol>"},{"location":"arquitetura/arquitetura/#tecnologias-utilizadas","title":"Tecnologias Utilizadas","text":""},{"location":"arquitetura/arquitetura/#mobile","title":"Mobile","text":"<ul> <li>Kotlin \u2014 linguagem principal.</li> <li>Jetpack Compose \u2014 UI declarativa.</li> <li>ViewModel + StateFlow \u2014 gerenciamento de estado.</li> <li>Hilt (Dagger) \u2014 inje\u00e7\u00e3o de depend\u00eancia.</li> <li>Coroutines + Flow \u2014 opera\u00e7\u00f5es ass\u00edncronas.</li> <li>Room \u2014 banco de dados local.</li> <li>Retrofit + OkHttp \u2014 consumo de APIs REST.</li> <li>Timber \u2014 logging.</li> </ul>"},{"location":"arquitetura/arquitetura/#backend","title":"Backend","text":"<ul> <li>Kotlin + Ktor \u2014 framework para APIs.</li> <li>PostgreSQL (Docker) \u2014 banco de dados principal.</li> <li>Exposed (ou ORM equivalente) \u2014 acesso ao banco.</li> <li>Swagger/OpenAPI \u2014 documenta\u00e7\u00e3o de endpoints.</li> </ul>"},{"location":"arquitetura/uml/","title":"Diagrama de Classes","text":"<p>O diagrama de classes abaixo representa a estrutura est\u00e1tica inicial do sistema Liryx, respons\u00e1vel por gerenciar usu\u00e1rios, m\u00fasicas, artistas, favoritos e hist\u00f3rico de buscas.</p> <p></p>"},{"location":"arquitetura/uml/#descricao-das-classes","title":"Descri\u00e7\u00e3o das Classes","text":""},{"location":"arquitetura/uml/#1-usuario","title":"1. Usuario","text":"<p>Representa o usu\u00e1rio do aplicativo.  </p> <p>Atributos:   - <code>id: Int</code> \u2014 Identificador \u00fanico.   - <code>nome: String</code> \u2014 Nome completo do usu\u00e1rio.   - <code>username: String</code> \u2014 Nome de usu\u00e1rio para login ou identifica\u00e7\u00e3o.  </p> <p>M\u00e9todos:   - <code>favoritarMusica()</code> \u2014 Permite ao usu\u00e1rio favoritar uma m\u00fasica.   - <code>consultarHistorico()</code> \u2014 Recupera o hist\u00f3rico de buscas realizadas.  </p>"},{"location":"arquitetura/uml/#2-musica","title":"2. Musica","text":"<p>Representa uma m\u00fasica cadastrada no sistema.  </p> <p>Atributos:   - <code>id: Int</code> \u2014 Identificador \u00fanico.   - <code>titulo: String</code> \u2014 T\u00edtulo da m\u00fasica.   - <code>letra: String</code> \u2014 Letra completa da m\u00fasica.   - <code>artista: Artista</code> \u2014 Artista respons\u00e1vel pela m\u00fasica.  </p> <p>M\u00e9todos:   - <code>getTitulo()</code> \u2014 Retorna o t\u00edtulo da m\u00fasica.   - <code>getLetra()</code> \u2014 Retorna a letra da m\u00fasica.   - <code>getArtista()</code> \u2014 Retorna o artista da m\u00fasica.  </p>"},{"location":"arquitetura/uml/#3-artista","title":"3. Artista","text":"<p>Representa um artista ou banda.  </p> <p>Atributos:   - <code>id: Int</code> \u2014 Identificador \u00fanico.   - <code>nome: String</code> \u2014 Nome do artista.   - <code>genero: String?</code> \u2014 G\u00eanero musical (opcional).  </p> <p>M\u00e9todos:   - <code>listarMusicas()</code> \u2014 Lista as m\u00fasicas relacionadas a este artista.  </p>"},{"location":"arquitetura/uml/#4-favorito","title":"4. Favorito","text":"<p>Relaciona um usu\u00e1rio \u00e0s m\u00fasicas que ele marcou como favoritas.  </p> <p>Atributos:   - <code>id: Int</code> \u2014 Identificador \u00fanico.   - <code>usuario: Usuario</code> \u2014 Usu\u00e1rio que favoritou.   - <code>musica: Musica</code> \u2014 M\u00fasica favoritada.  </p> <p>M\u00e9todos:   - <code>registrar()</code> \u2014 Registra uma m\u00fasica como favorita.   - <code>listar()</code> \u2014 Lista as m\u00fasicas favoritas do usu\u00e1rio.  </p>"},{"location":"arquitetura/uml/#5-historicobusca","title":"5. HistoricoBusca","text":"<p>Armazena o hist\u00f3rico de buscas realizadas por um usu\u00e1rio.  </p> <p>Atributos:   - <code>id: Int</code> \u2014 Identificador \u00fanico.   - <code>usuario: Usuario</code> \u2014 Usu\u00e1rio que realizou a busca.   - <code>textoBusca: String</code> \u2014 Texto que foi pesquisado.   - <code>data: DateTime</code> \u2014 Data e hora da busca.  </p> <p>M\u00e9todos:   - <code>registrar()</code> \u2014 Registra uma nova busca no hist\u00f3rico.   - <code>listar()</code> \u2014 Lista as buscas realizadas.  </p>"},{"location":"arquitetura/uml/#relacionamentos","title":"Relacionamentos","text":"<ul> <li>Um Usuario pode possuir m\u00faltiplos Favoritos e m\u00faltiplos HistoricoBusca.  </li> <li>Cada Musica est\u00e1 associada a um \u00fanico Artista.  </li> <li>Um Favorito conecta um Usuario a uma Musica.  </li> <li>Um HistoricoBusca conecta um Usuario a um termo buscado.  </li> </ul>"},{"location":"arquitetura/uml/#conclusao","title":"Conclus\u00e3o","text":"<p>Esse diagrama de classes define a estrutura inicial para o gerenciamento de m\u00fasicas, artistas e intera\u00e7\u00f5es dos usu\u00e1rios (favoritos e buscas). Ele serve de base para a implementa\u00e7\u00e3o tanto do backend (Ktor + PostgreSQL) quanto do app Android (Jetpack Compose + MVVM).</p>"},{"location":"backend/backend/","title":"Backend \u2014 Reposit\u00f3rio e Execu\u00e7\u00e3o","text":"<ul> <li>Estrutura m\u00ednima do reposit\u00f3rio (lista de arquivos/dirs)</li> <li>Como executar local:</li> <li>configurar <code>.env</code></li> <li><code>./gradlew run</code> </li> <li>Endpoints dispon\u00edveis</li> </ul>"},{"location":"entrega/pc1/","title":"Entregas","text":""},{"location":"entrega/pc1/#pc1","title":"PC1","text":"<ul> <li>Checklist com todos os itens a entregar:</li> <li>[ ] Ambiente-locker</li> <li>[ ] BD dockerizado</li> <li>[ ] BD IDE</li> <li>[ ] Reposit\u00f3rio backend + uma US</li> <li>[x] Arquitetura</li> <li>[x] Backlog (10 hist.)</li> <li>[x] UML</li> <li>[ ] Testes (skipado)</li> <li>[ ] Prot\u00f3tipo (Figma)</li> </ul>"},{"location":"prototipo/prototipo/","title":"Prot\u00f3tipo do Aplicativo","text":"<p>O prot\u00f3tipo do Lyryx foi desenvolvido para representar a experi\u00eancia inicial de navega\u00e7\u00e3o e usabilidade do aplicativo. Ele tem como objetivo validar a interface, os fluxos de intera\u00e7\u00e3o e a identidade visual do sistema antes da implementa\u00e7\u00e3o final.  </p>"},{"location":"prototipo/prototipo/#estado-atual","title":"Estado Atual","text":"<ul> <li>O prot\u00f3tipo encontra-se em desenvolvimento.  </li> <li>Algumas telas j\u00e1 foram desenhadas, como:  </li> <li>Tela inicial com busca de m\u00fasicas e se\u00e7\u00f5es de recentes e populares;  </li> <li>Tela de favoritos, com lista de m\u00fasicas salvas;  </li> <li>Tela de visualiza\u00e7\u00e3o da letra, incluindo op\u00e7\u00f5es de adicionar aos favoritos e compartilhar.  </li> <li>A evolu\u00e7\u00e3o do prot\u00f3tipo ser\u00e1 feita de forma incremental at\u00e9 atingir todas as funcionalidades previstas no backlog.  </li> </ul>"},{"location":"prototipo/prototipo/#previa-do-prototipo-pdf","title":"Pr\u00e9via do Prot\u00f3tipo (PDF)","text":"<p>Lyryx-prototipe.pdf cont\u00e9m a vers\u00e3o atual exportada do prot\u00f3tipo.  </p>"},{"location":"prototipo/prototipo/#versao-interativa-figma","title":"Vers\u00e3o Interativa (Figma)","text":"<p>Uma vers\u00e3o interativa do prot\u00f3tipo est\u00e1 dispon\u00edvel no Figma.  </p> <p>Ela permite navegar entre telas e simular a experi\u00eancia do usu\u00e1rio de forma mais din\u00e2mica.  </p>"},{"location":"requisitos/backlog/backlog/","title":"Backlog do Projeto","text":"<p>Este backlog foi estruturado a partir das elicita\u00e7\u00f5es de requisitos (entrevista e introspec\u00e7\u00e3o). Foram definidos Requisitos Funcionais (RF), transformados em Hist\u00f3rias de Usu\u00e1rio (US), agrupados em Features (F) e \u00c9picos (E). Al\u00e9m disso, foram listados Requisitos N\u00e3o Funcionais (RNF) que estabelecem crit\u00e9rios t\u00e9cnicos e de qualidade para o sistema.</p>"},{"location":"requisitos/backlog/backlog/#backlog-requisitos-funcionais","title":"Backlog \u2014 Requisitos Funcionais","text":"N\u00ba Requisito Funcional C\u00f3digo US C\u00f3digo Feature C\u00f3digo \u00c9pico RF01 Buscar letras por t\u00edtulo US01 F1.1 E1 RF02 Buscar letras por artista US02 F1.1 E1 RF03 Exibir a letra completa da m\u00fasica US03 F1.2 E1 RF04 Favoritar letras e listar favoritos US05, US06 F2.1 E2 RF05 Compartilhar letras com outros aplicativos US08 F3.1 E3 RF06 Exibir capa do \u00e1lbum junto da letra US04 F1.2 E1 RF07 Armazenar e exibir hist\u00f3rico de buscas US07 F2.2 E2 RF08 Oferecer tradu\u00e7\u00e3o da letra US10 F4.1 E4 RF09 Mostrar letra sincronizada com a m\u00fasica (karaok\u00ea) US11 F4.2 E4 RF10 Integrar o app com players externos (Spotify, YouTube) US12 F4.3 E4 RF11 Enviar notifica\u00e7\u00f5es sobre novidades de artistas favoritos US09 F3.2 E3 RF12 Permitir acesso offline \u00e0s letras j\u00e1 visualizadas US13 F4.4 E4 RF13 Permitir login social (Google, Facebook) US14 F5.1 E5 RF14 Ajustar tamanho e estilo da fonte da letra exibida US15 F5.2 E5 RF15 Criar playlists de m\u00fasicas favoritas US16 F2.3 E2 RF16 Permitir modo noturno al\u00e9m das cores padr\u00e3o US17 F5.3 E5 RF17 Buscar letras por trecho da letra (palavras-chave) US18 F1.3 E1 RF18 Exibir informa\u00e7\u00f5es adicionais da m\u00fasica (\u00e1lbum, ano) US19 F1.4 E1"},{"location":"requisitos/backlog/backlog/#backlog-requisitos-nao-funcionais","title":"Backlog \u2014 Requisitos N\u00e3o Funcionais","text":"N\u00ba Requisito N\u00e3o Funcional RNF01 O app deve ser desenvolvido em Kotlin para Android. RNF02 O backend deve usar PostgreSQL dockerizado. RNF03 O sistema deve apresentar interface responsiva e fluida. RNF04 O app deve utilizar cores roxo e preto como identidade visual. RNF05 O tempo de resposta da busca deve ser inferior a 3 segundos. RNF06 O app deve oferecer autentica\u00e7\u00e3o segura (OAuth2 para login social). RNF07 Deve haver suporte a acessibilidade (ex.: leitores de tela). RNF08 A interface deve suportar personaliza\u00e7\u00e3o de fontes e modo noturno."},{"location":"requisitos/backlog/backlog/#estrutura-de-identificacao","title":"Estrutura de Identifica\u00e7\u00e3o","text":"<ul> <li>\u00c9picos (E): </li> <li>E1 \u2014 Busca e Visualiza\u00e7\u00e3o de Letras  </li> <li>E2 \u2014 Personaliza\u00e7\u00e3o e Favoritos  </li> <li>E3 \u2014 Compartilhamento e Intera\u00e7\u00e3o  </li> <li>E4 \u2014 Funcionalidades Avan\u00e7adas  </li> <li> <p>E5 \u2014 Experi\u00eancia do Usu\u00e1rio e Acessibilidade  </p> </li> <li> <p>Features (F): </p> </li> <li>F1.1 \u2014 Busca de m\u00fasicas por t\u00edtulo/artista  </li> <li>F1.2 \u2014 Visualiza\u00e7\u00e3o da letra e capa  </li> <li>F1.3 \u2014 Busca por trecho da letra  </li> <li>F1.4 \u2014 Exibi\u00e7\u00e3o de informa\u00e7\u00f5es adicionais da m\u00fasica  </li> <li>F2.1 \u2014 Favoritar m\u00fasicas  </li> <li>F2.2 \u2014 Hist\u00f3rico  </li> <li>F2.3 \u2014 Playlists de favoritos  </li> <li>F3.1 \u2014 Compartilhamento  </li> <li>F3.2 \u2014 Notifica\u00e7\u00f5es  </li> <li>F4.1 \u2014 Tradu\u00e7\u00e3o  </li> <li>F4.2 \u2014 Sincroniza\u00e7\u00e3o (karaok\u00ea)  </li> <li>F4.3 \u2014 Integra\u00e7\u00e3o com players externos  </li> <li>F4.4 \u2014 Acesso offline  </li> <li>F5.1 \u2014 Login social  </li> <li>F5.2 \u2014 Personaliza\u00e7\u00e3o de fonte  </li> <li>F5.3 \u2014 Modo noturno  </li> </ul>"},{"location":"requisitos/backlog/usm/","title":"User Story Mapping","text":"<p>O User Story Mapping organiza os requisitos do sistema em diferentes n\u00edveis: - \u00c9picos (E): Macroobjetivos do sistema. - Features (F): Conjuntos de funcionalidades relacionadas que ajudam a atingir o \u00e9pico. - User Stories (US): Hist\u00f3rias que descrevem, do ponto de vista do usu\u00e1rio, o que ele precisa realizar.  </p>"},{"location":"requisitos/backlog/usm/#estrutura-do-mapeamento","title":"Estrutura do Mapeamento","text":""},{"location":"requisitos/backlog/usm/#epico-e1-busca-e-visualizacao-de-letras","title":"\u00c9pico E1 \u2014 Busca e Visualiza\u00e7\u00e3o de Letras","text":"<p>Objetivo: Permitir que os usu\u00e1rios encontrem e visualizem letras de m\u00fasicas de forma simples.  </p> <ul> <li>F1.1 \u2014 Busca de m\u00fasicas por t\u00edtulo/artista </li> <li>US01: Como usu\u00e1rio, quero buscar letras pelo t\u00edtulo da m\u00fasica, para encontrar a can\u00e7\u00e3o desejada.  </li> <li> <p>US02: Como usu\u00e1rio, quero buscar letras pelo nome do artista, para localizar m\u00fasicas espec\u00edficas.  </p> </li> <li> <p>F1.2 \u2014 Visualiza\u00e7\u00e3o da letra e capa </p> </li> <li>US03: Como usu\u00e1rio, quero visualizar a letra completa da m\u00fasica, para acompanhar durante a audi\u00e7\u00e3o.  </li> <li> <p>US04: Como usu\u00e1rio, quero visualizar a capa do \u00e1lbum junto da letra, para enriquecer a experi\u00eancia.  </p> </li> <li> <p>F1.3 \u2014 Busca por trecho da letra </p> </li> <li> <p>US18: Como usu\u00e1rio, quero buscar m\u00fasicas digitando um trecho da letra, para encontrar m\u00fasicas que n\u00e3o sei o nome.  </p> </li> <li> <p>F1.4 \u2014 Informa\u00e7\u00f5es adicionais da m\u00fasica </p> </li> <li>US19: Como usu\u00e1rio, quero ver informa\u00e7\u00f5es adicionais da m\u00fasica (\u00e1lbum, ano), para conhecer melhor o contexto da can\u00e7\u00e3o.  </li> </ul>"},{"location":"requisitos/backlog/usm/#epico-e2-personalizacao-e-favoritos","title":"\u00c9pico E2 \u2014 Personaliza\u00e7\u00e3o e Favoritos","text":"<p>Objetivo: Oferecer recursos para que o usu\u00e1rio personalize sua experi\u00eancia e salve prefer\u00eancias.  </p> <ul> <li>F2.1 \u2014 Favoritar m\u00fasicas </li> <li>US05: Como usu\u00e1rio, quero favoritar letras de m\u00fasicas, para acess\u00e1-las rapidamente depois.  </li> <li> <p>US06: Como usu\u00e1rio, quero visualizar minha lista de m\u00fasicas favoritas, para reouvir ou reler quando quiser.  </p> </li> <li> <p>F2.2 \u2014 Hist\u00f3rico </p> </li> <li> <p>US07: Como usu\u00e1rio, quero acessar o hist\u00f3rico de buscas, para revisitar m\u00fasicas j\u00e1 procuradas.  </p> </li> <li> <p>F2.3 \u2014 Playlists de favoritos </p> </li> <li>US16: Como usu\u00e1rio, quero criar playlists de m\u00fasicas favoritas, para organizar melhor minhas prefer\u00eancias.  </li> </ul>"},{"location":"requisitos/backlog/usm/#epico-e3-compartilhamento-e-interacao","title":"\u00c9pico E3 \u2014 Compartilhamento e Intera\u00e7\u00e3o","text":"<p>Objetivo: Permitir que os usu\u00e1rios compartilhem conte\u00fado e recebam atualiza\u00e7\u00f5es relevantes.  </p> <ul> <li>F3.1 \u2014 Compartilhamento </li> <li> <p>US08: Como usu\u00e1rio, quero compartilhar letras com outros aplicativos, para mostrar m\u00fasicas a amigos.  </p> </li> <li> <p>F3.2 \u2014 Notifica\u00e7\u00f5es </p> </li> <li>US09: Como usu\u00e1rio, quero receber notifica\u00e7\u00f5es sobre novidades de artistas favoritos, para ficar atualizado.  </li> </ul>"},{"location":"requisitos/backlog/usm/#epico-e4-funcionalidades-avancadas","title":"\u00c9pico E4 \u2014 Funcionalidades Avan\u00e7adas","text":"<p>Objetivo: Enriquecer o app com recursos diferenciados que aumentem o valor agregado.  </p> <ul> <li>F4.1 \u2014 Tradu\u00e7\u00e3o </li> <li> <p>US10: Como usu\u00e1rio, quero ver a tradu\u00e7\u00e3o da letra, para compreender m\u00fasicas em outros idiomas.  </p> </li> <li> <p>F4.2 \u2014 Sincroniza\u00e7\u00e3o (karaok\u00ea) </p> </li> <li> <p>US11: Como usu\u00e1rio, quero ver a letra sincronizada com a m\u00fasica, para cantar junto.  </p> </li> <li> <p>F4.3 \u2014 Integra\u00e7\u00e3o com players externos </p> </li> <li> <p>US12: Como usu\u00e1rio, quero integrar o app com Spotify e YouTube, para ouvir enquanto acompanho a letra.  </p> </li> <li> <p>F4.4 \u2014 Acesso offline </p> </li> <li>US13: Como usu\u00e1rio, quero acessar letras j\u00e1 visualizadas sem internet, para usar o app em qualquer lugar.  </li> </ul>"},{"location":"requisitos/backlog/usm/#epico-e5-experiencia-do-usuario-e-acessibilidade","title":"\u00c9pico E5 \u2014 Experi\u00eancia do Usu\u00e1rio e Acessibilidade","text":"<p>Objetivo: Melhorar a usabilidade e garantir acessibilidade para diferentes perfis de usu\u00e1rios.  </p> <ul> <li>F5.1 \u2014 Login social </li> <li> <p>US14: Como usu\u00e1rio, quero fazer login com Google ou Facebook, para facilitar meu acesso.  </p> </li> <li> <p>F5.2 \u2014 Personaliza\u00e7\u00e3o de fonte </p> </li> <li> <p>US15: Como usu\u00e1rio, quero ajustar o tamanho e estilo da fonte, para melhorar minha leitura.  </p> </li> <li> <p>F5.3 \u2014 Modo noturno </p> </li> <li>US17: Como usu\u00e1rio, quero habilitar modo noturno, para reduzir o cansa\u00e7o visual.  </li> </ul>"},{"location":"requisitos/backlog/usm/#mvp-produto-minimo-viavel","title":"MVP \u2014 Produto M\u00ednimo Vi\u00e1vel","text":"<p>O MVP deve focar nas funcionalidades essenciais que permitam ao usu\u00e1rio buscar e visualizar letras, garantindo o valor principal do aplicativo.  </p> <p>Escopo do MVP: </p> <ul> <li>E1 \u2014 Busca e Visualiza\u00e7\u00e3o de Letras </li> <li>F1.1 (Busca por t\u00edtulo/artista) \u2192 US01, US02  </li> <li>F1.2 (Visualiza\u00e7\u00e3o da letra e capa) \u2192 US03, US04  </li> </ul> <p>Justificativa: </p> <p>Essas funcionalidades garantem que o usu\u00e1rio consiga utilizar o app em sua forma mais simples: procurar m\u00fasicas e visualizar as letras. A partir desse n\u00facleo validado, novas features podem ser adicionadas gradualmente.  </p>"},{"location":"requisitos/elicitacao/entrevista/","title":"Entrevista","text":"<p>Foi realizada uma entrevista com um stakeholder interessado no aplicativo de letras de m\u00fasica. A partir dessa entrevista foram coletadas percep\u00e7\u00f5es sobre funcionalidades essenciais, melhorias desejadas e ideias de diferenciais. Com base nas respostas, foi poss\u00edvel elicitar requisitos funcionais e n\u00e3o funcionais, al\u00e9m de organizar hist\u00f3rias de usu\u00e1rio, features e \u00e9picos.</p>"},{"location":"requisitos/elicitacao/entrevista/#perguntas-e-respostas-da-entrevista","title":"Perguntas e Respostas da Entrevista","text":""},{"location":"requisitos/elicitacao/entrevista/#funcionalidades-basicas","title":"Funcionalidades B\u00e1sicas","text":"<ul> <li> <p>Pergunta: O que n\u00e3o pode faltar no aplicativo de letras de m\u00fasica? Resposta: Deve ter busca por t\u00edtulo e por artista. Requisito Derivado: O sistema deve permitir busca de letras por t\u00edtulo ou artista.</p> </li> <li> <p>Pergunta: Gostaria que fosse poss\u00edvel favoritar letras? Resposta: Sim, seria importante para acessar depois. Requisito Derivado: O sistema deve permitir favoritar e listar letras favoritas.</p> </li> <li> <p>Pergunta: Deseja que o app permita compartilhar letras? Resposta: Sim, poder mandar para amigos seria \u00f3timo. Requisito Derivado: O sistema deve permitir compartilhar letras via outros apps.</p> </li> <li> <p>Pergunta: Voc\u00ea gostaria de ver a capa do \u00e1lbum junto da letra? Resposta: Sim, deixaria a experi\u00eancia mais completa. Requisito Derivado: O sistema deve exibir metadados da m\u00fasica (ex.: capa do \u00e1lbum).</p> </li> <li> <p>Pergunta: Acha \u00fatil poder consultar o hist\u00f3rico de buscas? Resposta: Sim, facilita encontrar m\u00fasicas que j\u00e1 procurei. Requisito Derivado: O sistema deve armazenar e mostrar hist\u00f3rico de pesquisas.</p> </li> </ul>"},{"location":"requisitos/elicitacao/entrevista/#funcionalidades-avancadas","title":"Funcionalidades Avan\u00e7adas","text":"<ul> <li> <p>Pergunta: Al\u00e9m de ver a letra, o que mais gostaria de ter na tela da m\u00fasica? Resposta: Seria legal ter tradu\u00e7\u00e3o dispon\u00edvel. Requisito Derivado: O sistema deve oferecer tradu\u00e7\u00e3o da letra (manual ou autom\u00e1tica).</p> </li> <li> <p>Pergunta: Gostaria que houvesse sincroniza\u00e7\u00e3o estilo karaok\u00ea? Resposta: Sim, se poss\u00edvel mostrar a letra acompanhando a m\u00fasica. Requisito Derivado: O sistema deve oferecer visualiza\u00e7\u00e3o da letra sincronizada com a m\u00fasica.</p> </li> <li> <p>Pergunta: E se o app tivesse integra\u00e7\u00e3o com Spotify ou YouTube? Resposta: Seria \u00f3timo abrir a letra junto com a m\u00fasica que estou ouvindo. Requisito Derivado: O sistema deve permitir integra\u00e7\u00e3o com players externos.</p> </li> <li> <p>Pergunta: Acha \u00fatil ter notifica\u00e7\u00f5es de artistas favoritos? Resposta: Sim, quero ser avisado quando sair algo novo. Requisito Derivado: O sistema deve enviar notifica\u00e7\u00f5es sobre novidades dos artistas favoritos.</p> </li> <li> <p>Pergunta: Gostaria de poder usar o app offline? Resposta: Sim, pelo menos para letras j\u00e1 visualizadas. Requisito Derivado: O sistema deve permitir acesso offline \u00e0s letras j\u00e1 carregadas.</p> </li> </ul>"},{"location":"requisitos/elicitacao/entrevista/#requisitos-elicitados","title":"Requisitos Elicitados","text":""},{"location":"requisitos/elicitacao/entrevista/#requisitos-funcionais-rf","title":"Requisitos Funcionais (RF)","text":"<ul> <li>RF01 \u2014 Buscar letras por t\u00edtulo.  </li> <li>RF02 \u2014 Buscar letras por artista.  </li> <li>RF03 \u2014 Exibir a letra completa da m\u00fasica.  </li> <li>RF04 \u2014 Favoritar letras e listar favoritos.  </li> <li>RF05 \u2014 Compartilhar letras com outros aplicativos.  </li> <li>RF06 \u2014 Exibir capa do \u00e1lbum junto da letra.  </li> <li>RF07 \u2014 Armazenar e exibir hist\u00f3rico de buscas.  </li> <li>RF08 \u2014 Oferecer tradu\u00e7\u00e3o da letra.  </li> <li>RF09 \u2014 Mostrar letra sincronizada com a m\u00fasica (karaok\u00ea).  </li> <li>RF10 \u2014 Integrar o app com players externos (Spotify, YouTube).  </li> <li>RF11 \u2014 Enviar notifica\u00e7\u00f5es sobre novidades de artistas favoritos.  </li> <li>RF12 \u2014 Permitir acesso offline \u00e0s letras j\u00e1 visualizadas.  </li> </ul>"},{"location":"requisitos/elicitacao/entrevista/#requisitos-nao-funcionais-rnf","title":"Requisitos N\u00e3o Funcionais (RNF)","text":"<ul> <li>RNF01 \u2014 O app deve ser desenvolvido em Kotlin para Android.  </li> <li>RNF02 \u2014 O backend deve usar PostgreSQL dockerizado.  </li> <li>RNF03 \u2014 O sistema deve apresentar interface responsiva e fluida.  </li> <li>RNF04 \u2014 O app deve utilizar cores roxo e preto como identidade visual.  </li> <li>RNF05 \u2014 O tempo de resposta da busca deve ser inferior a 3 segundos.  </li> </ul>"},{"location":"requisitos/elicitacao/entrevista/#organizacao-em-epicos-features-e-historias-de-usuario","title":"Organiza\u00e7\u00e3o em \u00c9picos, Features e Hist\u00f3rias de Usu\u00e1rio","text":""},{"location":"requisitos/elicitacao/entrevista/#epico-1-busca-e-visualizacao-de-letras","title":"\u00c9pico 1: Busca e Visualiza\u00e7\u00e3o de Letras","text":"<ul> <li>Feature 1.1: Busca de m\u00fasicas  </li> <li>US01: Como usu\u00e1rio, quero buscar letras por t\u00edtulo, para encontrar a m\u00fasica que desejo.  </li> <li> <p>US02: Como usu\u00e1rio, quero buscar letras por artista, para visualizar m\u00fasicas relacionadas.  </p> </li> <li> <p>Feature 1.2: Visualiza\u00e7\u00e3o da letra  </p> </li> <li>US03: Como usu\u00e1rio, quero visualizar a letra completa da m\u00fasica selecionada.  </li> <li>US04: Como usu\u00e1rio, quero ver a capa do \u00e1lbum junto da letra para uma experi\u00eancia mais rica.  </li> </ul>"},{"location":"requisitos/elicitacao/entrevista/#epico-2-personalizacao-e-favoritos","title":"\u00c9pico 2: Personaliza\u00e7\u00e3o e Favoritos","text":"<ul> <li>Feature 2.1: Favoritar m\u00fasicas  </li> <li>US05: Como usu\u00e1rio, quero favoritar letras para acess\u00e1-las rapidamente depois.  </li> <li> <p>US06: Como usu\u00e1rio, quero acessar uma lista de favoritos em uma aba dedicada.  </p> </li> <li> <p>Feature 2.2: Hist\u00f3rico  </p> </li> <li>US07: Como usu\u00e1rio, quero acessar um hist\u00f3rico de buscas para reutilizar pesquisas recentes.  </li> </ul>"},{"location":"requisitos/elicitacao/entrevista/#epico-3-compartilhamento-e-interacao","title":"\u00c9pico 3: Compartilhamento e Intera\u00e7\u00e3o","text":"<ul> <li>Feature 3.1: Compartilhamento  </li> <li> <p>US08: Como usu\u00e1rio, quero compartilhar letras via outros aplicativos (WhatsApp, Instagram etc.).  </p> </li> <li> <p>Feature 3.2: Notifica\u00e7\u00f5es  </p> </li> <li>US09: Como usu\u00e1rio, quero receber notifica\u00e7\u00f5es quando sair algo novo de um artista favorito.  </li> </ul>"},{"location":"requisitos/elicitacao/entrevista/#epico-4-funcionalidades-avancadas","title":"\u00c9pico 4: Funcionalidades Avan\u00e7adas","text":"<ul> <li>Feature 4.1: Tradu\u00e7\u00e3o  </li> <li> <p>US10: Como usu\u00e1rio, quero visualizar a tradu\u00e7\u00e3o da letra para outro idioma.  </p> </li> <li> <p>Feature 4.2: Sincroniza\u00e7\u00e3o (karaok\u00ea)  </p> </li> <li> <p>US11: Como usu\u00e1rio, quero acompanhar a letra em tempo real enquanto a m\u00fasica toca.  </p> </li> <li> <p>Feature 4.3: Integra\u00e7\u00e3o com players externos  </p> </li> <li> <p>US12: Como usu\u00e1rio, quero abrir a letra automaticamente quando escutar uma m\u00fasica no Spotify/YouTube.  </p> </li> <li> <p>Feature 4.4: Acesso offline  </p> </li> <li>US13: Como usu\u00e1rio, quero acessar letras j\u00e1 abertas mesmo sem internet.  </li> </ul>"},{"location":"requisitos/elicitacao/introspeccao/","title":"Introspec\u00e7\u00e3o","text":"<p>Foi realizada uma introspec\u00e7\u00e3o pelo analista no contexto do aplicativo de letras de m\u00fasica (Liryx). Nessa t\u00e9cnica, o analista se coloca no lugar do usu\u00e1rio e reflete sobre cen\u00e1rios reais de uso, antecipando funcionalidades que poderiam melhorar a experi\u00eancia, acessibilidade e personaliza\u00e7\u00e3o.</p> <p>Com base nessas reflex\u00f5es, foram identificadas novas necessidades e elicitados requisitos adicionais, que complementam os j\u00e1 obtidos por entrevista.</p>"},{"location":"requisitos/elicitacao/introspeccao/#perguntas-e-reflexoes-da-introspeccao","title":"Perguntas e Reflex\u00f5es da Introspec\u00e7\u00e3o","text":""},{"location":"requisitos/elicitacao/introspeccao/#experiencia-de-acesso","title":"Experi\u00eancia de Acesso","text":"<ul> <li>Pergunta (reflex\u00e3o): Como o usu\u00e1rio pode entrar no app de forma simples?</li> <li>Resposta Introspectiva: Seria \u00fatil permitir login com contas sociais, sem necessidade de criar cadastro manual.</li> <li> <p>Requisito Derivado: O sistema deve permitir login social (Google, Facebook).</p> </li> <li> <p>Pergunta (reflex\u00e3o): Como o app poderia ser mais acess\u00edvel?</p> </li> <li>Resposta Introspectiva: Usu\u00e1rios podem precisar ajustar o tamanho da fonte.</li> <li>Requisito Derivado: O sistema deve permitir personaliza\u00e7\u00e3o do tamanho e estilo da fonte.</li> </ul>"},{"location":"requisitos/elicitacao/introspeccao/#personalizacao-e-usabilidade","title":"Personaliza\u00e7\u00e3o e Usabilidade","text":"<ul> <li>Pergunta (reflex\u00e3o): Como o usu\u00e1rio pode organizar melhor suas m\u00fasicas favoritas?</li> <li>Resposta Introspectiva: Poder criar playlists seria um diferencial.</li> <li> <p>Requisito Derivado: O sistema deve permitir criar playlists de m\u00fasicas favoritas.</p> </li> <li> <p>Pergunta (reflex\u00e3o): E quanto ao visual do aplicativo?</p> </li> <li>Resposta Introspectiva: Ter apenas roxo e preto pode limitar. \u00c9 interessante oferecer um modo noturno adicional.</li> <li>Requisito Derivado: O sistema deve oferecer modo noturno.</li> </ul>"},{"location":"requisitos/elicitacao/introspeccao/#busca-e-informacoes-extras","title":"Busca e Informa\u00e7\u00f5es Extras","text":"<ul> <li>Pergunta (reflex\u00e3o): Se o usu\u00e1rio n\u00e3o lembrar do t\u00edtulo ou artista, como poderia buscar?</li> <li>Resposta Introspectiva: Uma busca por trecho da letra resolveria.</li> <li> <p>Requisito Derivado: O sistema deve permitir busca por trecho da letra (palavras-chave).</p> </li> <li> <p>Pergunta (reflex\u00e3o): Al\u00e9m da letra, o que mais seria \u00fatil?</p> </li> <li>Resposta Introspectiva: Exibir informa\u00e7\u00f5es adicionais como \u00e1lbum e ano da m\u00fasica.</li> <li>Requisito Derivado: O sistema deve exibir informa\u00e7\u00f5es adicionais da m\u00fasica (\u00e1lbum, ano).</li> </ul>"},{"location":"requisitos/elicitacao/introspeccao/#requisitos-elicitados","title":"Requisitos Elicitados","text":""},{"location":"requisitos/elicitacao/introspeccao/#requisitos-funcionais-rf","title":"Requisitos Funcionais (RF)","text":"<ul> <li>RF13 \u2014 Permitir login social (Google, Facebook).</li> <li>RF14 \u2014 Ajustar tamanho e estilo da fonte da letra exibida.</li> <li>RF15 \u2014 Criar playlists de m\u00fasicas favoritas dentro do app.</li> <li>RF16 \u2014 Permitir modo noturno al\u00e9m das cores padr\u00e3o.</li> <li>RF17 \u2014 Adicionar recurso de busca por trecho da letra (palavras-chave).</li> <li>RF18 \u2014 Exibir informa\u00e7\u00f5es adicionais da m\u00fasica (\u00e1lbum, ano de lan\u00e7amento).</li> </ul>"},{"location":"requisitos/elicitacao/introspeccao/#requisitos-nao-funcionais-rnf","title":"Requisitos N\u00e3o Funcionais (RNF)","text":"<ul> <li>RNF06 \u2014 O app deve oferecer autentica\u00e7\u00e3o segura (OAuth2 para login social).</li> <li>RNF07 \u2014 Deve haver suporte a acessibilidade (ex.: leitores de tela).</li> <li>RNF08 \u2014 A interface deve suportar personaliza\u00e7\u00e3o de fontes e modo noturno.</li> </ul>"},{"location":"requisitos/elicitacao/introspeccao/#organizacao-em-epicos-features-e-historias-de-usuario","title":"Organiza\u00e7\u00e3o em \u00c9picos, Features e Hist\u00f3rias de Usu\u00e1rio","text":""},{"location":"requisitos/elicitacao/introspeccao/#epico-5-experiencia-do-usuario-e-acessibilidade","title":"\u00c9pico 5: Experi\u00eancia do Usu\u00e1rio e Acessibilidade","text":"<ul> <li>Feature 5.1: Login social</li> <li> <p>US14: Como usu\u00e1rio, quero entrar no app usando minha conta Google/Facebook, para agilizar o acesso.</p> </li> <li> <p>Feature 5.2: Personaliza\u00e7\u00e3o de fonte</p> </li> <li> <p>US15: Como usu\u00e1rio, quero ajustar o tamanho e estilo da fonte, para facilitar a leitura.</p> </li> <li> <p>Feature 5.3: Modo noturno</p> </li> <li>US17: Como usu\u00e1rio, quero usar o app em modo noturno, para reduzir o cansa\u00e7o visual.</li> </ul>"},{"location":"requisitos/elicitacao/introspeccao/#extensoes-de-funcionalidades-existentes","title":"Extens\u00f5es de Funcionalidades Existentes","text":"<ul> <li>Feature 2.3: Playlists de favoritos</li> <li> <p>US16: Como usu\u00e1rio, quero criar playlists de m\u00fasicas favoritas, para organizar melhor minhas letras.</p> </li> <li> <p>Feature 1.3: Busca por trecho da letra</p> </li> <li> <p>US18: Como usu\u00e1rio, quero buscar letras digitando parte da letra, para encontrar m\u00fasicas mesmo sem saber o t\u00edtulo.</p> </li> <li> <p>Feature 1.4: Informa\u00e7\u00f5es adicionais da m\u00fasica</p> </li> <li>US19: Como usu\u00e1rio, quero visualizar informa\u00e7\u00f5es extras (\u00e1lbum, ano) junto da letra, para enriquecer a experi\u00eancia.</li> </ul>"},{"location":"testes/testes/","title":"Testes","text":"<ul> <li>Estrat\u00e9gia de testes (unit/integration)</li> <li>Observa\u00e7\u00e3o: testes est\u00e3o presente mas marcados como skip/disabled para o PC1.</li> <li>to do Exemplo de arquivo de teste</li> <li>to do Como executar (CI/locally)</li> </ul>"}]}